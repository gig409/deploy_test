# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Deploy to Fly.io
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    concurrency: deploy-staging-group
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Debug GitHub event
        run: |
          echo "=== GITHUB CONTEXT DEBUG ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Ref: ${{ github.ref }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "SHA: ${{ github.sha }}"
          echo "=== ENVIRONMENT DEBUG ==="
          env | grep GITHUB_ | sort
      
      - name: Test secret and verify app exists
        run: |
          echo "Testing app name: '${{ secrets.FLY_STAGING_APP_NAME }}'"
          flyctl apps show ${{ secrets.FLY_STAGING_APP_NAME }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Create staging fly.toml
        run: |
          cp fly.toml fly.staging.toml
          sed -i "s/app = 'deploy-test-damp-water-846'/app = '${{ secrets.FLY_STAGING_APP_NAME }}'/" fly.staging.toml
      
      - name: Deploy to staging
        run: flyctl deploy --remote-only --config fly.staging.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Comment PR with staging URL
        uses: actions/github-script@v7
        with:
          script: |
            const stagingUrl = `https://${{ secrets.FLY_STAGING_APP_NAME }}.fly.dev`;
            const comment = `ðŸš€ **Staging deployment complete!**
            
            Your changes have been deployed to: ${stagingUrl}
            
            Test your changes and let us know when it's ready for production! ðŸŽ‰`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency: deploy-production-group
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy to production
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
